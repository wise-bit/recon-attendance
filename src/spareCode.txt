// Choose location of storing an image

JFileChooser chooser = new JFileChooser();
chooser.setDialogTitle("Save Image");
chooser.setFileFilter(new FileNameExtensionFilter("Images only", "png", "jpeg", "jpg")); //this file extentions are shown
int showSaveDialog = chooser.showSaveDialog(this);
if (showSaveDialog == 0) {                  //if pressed 'Save' button
    String filePath = chooser.getCurrentDirectory().toString().replace("\\", "/");
    String fileName = chooser.getSelectedFile().getName(); //get user entered file name to save
    ImageIO.write(image, "PNG", new File(filePath + "/" + fileName + ".png"));

}


// Old way of getting images

int showConfirmDialog = JOptionPane.showConfirmDialog(this, imageLbl, "Image Viewer", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, new ImageIcon(""));

if (showConfirmDialog == JOptionPane.YES_OPTION) {

    // save image to PNG file
    String filePath = "res/trainingSet/teacher1/student1";
    ImageIO.write(image, "PNG", new File(filePath + "/" + "test.png"));

}

// DIY browser

JFrame jFrame = new JFrame();
Container cPane = jFrame.getContentPane();
final JEditorPane editorPane = new JEditorPane();
try {
    editorPane.setPage("http://www.javacodegeeks.com/");
} catch (IOException e) {
    System.err.println("Invalid URL: " + e);
    System.exit(-1);
}
HyperlinkListener listener = new HyperlinkListener() {
    @Override
    public void hyperlinkUpdate(HyperlinkEvent event) {
        if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
            try {
                editorPane.setPage(event.getURL());
            } catch (IOException ioe) {
                System.err.println("Error loading url from link: " + ioe);
            }
        }
    }
};
editorPane.addHyperlinkListener(listener);
editorPane.setEditable(false);
JScrollPane pane = new JScrollPane(editorPane);
cPane.add(pane, BorderLayout.CENTER);
jFrame.setSize(800, 600);
jFrame.setVisible(true);

